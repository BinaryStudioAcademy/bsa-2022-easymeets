name: Continuous Delivery

on:
  push:
    branches:
      [main]
      # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_core_service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Core Service
        uses: docker/build-push-action@v2
        with:
          tags: tatihutii/easymeets_core:latest
          context: ./backend
          file: ./backend/EasyMeets.Core/Dockerfile
          build-args: PROJECT_PORT=5050
          push: true

  build_notifier_service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Notifier Service
        uses: docker/build-push-action@v2
        with:
          tags: tatihutii/easymeets_notifier:latest
          context: ./backend
          file: ./backend/EasyMeets.Notifier/Dockerfile
          build-args: PROJECT_PORT=5070
          push: true

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Frontend
        uses: docker/build-push-action@v2
        with:
          tags: tatihutii/easymeets_frontend:latest
          context: ./frontend
          push: true

  deploy_images:
    runs-on: ubuntu-latest
    needs: [build_core_service, build_notifier_service, build_frontend]
    steps:
      - uses: actions/checkout@v2
      - name: Update PROD images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: cd ~/bsa-2022-easymeets && sudo docker-compose -f docker-compose.apps.prod.yml stop && sudo docker-compose -f docker-compose.apps.prod.yml pull && sudo docker system prune -f && sudo docker-compose -f docker-compose.apps.prod.yml up -d
